#include <iostream>
#include <unistd.h>

#include "IPlot.h"

#include "fcontrol.h"

using namespace std;


int main()
{

    double dts=0.01;

    IPlot pt(dts);


//    TimeSignal dirac(valarray<double> {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
//                ,dts);
//        FSystemBlock con(dirac);

//    //fractional integrator FIR s^-0.857
//    TimeSignal fi_085(valarray<double> {}
//                ,dts);
//    FSystemBlock con(fi_085);

//    //flat phase cancellator
//    TimeSignal cancs(valarray<double> {    6.3000000000000007,57.583007590444325,42.155629165742106,48.755411749345448,41.398780021230039,44.291826131801301,39.101677502251476,40.561443553611234,36.395956557292834,37.082693942716602,33.524116079923715,33.719396535807014,30.568797555545373,30.418381145804616,27.565816709952234,27.154608517621973,24.533227153579407,23.914717178568356,21.481143182355204,20.690897851393281,18.415701799744195,17.478249752736915,15.340875013674525,14.273508395463303,12.259382020718288,11.074378837935999,9.1731853142039093,7.8791602612337464,6.0837795035241058,4.6865200368106201,2.9923711830133541,1.495347752342731,-0.099999999999999645,-1.6953477523427303,-3.192371183013357,-4.8865200368106159,-6.2837795035241051,-8.0791602612337421,-9.3731853142039103,-11.274378837935998,-12.459382020718287,-14.473508395463302,-15.540875013674526,-17.67824975273691,-18.615701799744194,-20.890897851393284,-21.681143182355203,-24.114717178568355,-24.73322715357941,-27.354608517621973,-27.765816709952233,-30.618381145804619,-30.768797555545373,-33.91939653580701,-33.724116079923711,-37.282693942716598,-36.595956557292837,-40.76144355361123,-39.301677502251479,-44.491826131801304,-41.598780021230041,-48.955411749345444,-42.355629165742108,-57.783007590444321 }
//                ,dts);
//    FSystemBlock canc(cancs);

    //    //motor dts=1
//    SystemBlock motor(vector<double>{1, 1},
//                      vector<double>{-1, 3},
//                      dts
//                      );


    //motor dts=0.01
    SystemBlock motor(vector<double>{0.04762, 0.04762},
                      vector<double>{-0.9048, 1},
                      1
                      );

//    SystemBlock c2(vector<double>{168332,   -2616528,    -4348408,   4721072 ,   6499532},
//                      vector<double>{861655,   3032620,   -7760070,   -6083380,    10247655},
//                      1
//                      );

//    //fractional integral dts=0.01
//    SystemBlock con(vector<double>{ 0.0163,   -0.0928,    0.1837,   -0.1540,    0.0468},
//                    vector<double>{0.8399,   -3.5148,    5.5101,   -3.8351,    1.0000},
//                    1);

//fpi dts=0.01
    SystemBlock con(vector<double>{3.0244,  -13.6715,   22.9928,  -17.0707,    4.7250},
                      vector<double>{0.8399,   -3.5148,    5.5101,   -3.8351,    1.0000},
                      1./26);

    SystemBlock ci(vector<double>{0,1},
                      vector<double>{-1,1},
                      1);

    FactorSystemBlock con2(vector<double>{(-0.768576),(-0.0589572),(+0.597801),(+0.956103)},
                           vector<double>{(-0.967308),(-0.575831),(+0.201927),(+0.747576)},
                           0.004496);

    double out;
    double target=100;
    double error=0;
    double show;

    for(double t=0;t<5;t+=dts)
    {

        //1-update inputs
        error = target - motor.GetState();

        //2-control diagram
        out= error  > con2;
        (out) >  motor;

        //3-update outputs

        //3-update graphs and cout
        show=motor.GetState();
        pt.pushBack(show);
        cout << "t: " << t << ", plotdata: " << show << endl;
        sleep(dts);

    }

    pt.Plot();


    return 0;
}
