#include <iostream>
#include <unistd.h>

#include "IPlot.h"

#include "fcontrol.h"

using namespace std;


int main()
{

    double dts=0.01;

    IPlot pt(dts);


    TimeSignal irdelta(valarray<double> {1, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
                ,dts);
    //fractional integrator FIR s^0.857
    TimeSignal ir1(valarray<double> {}
                ,dts);
    FSystemBlock c1(ir1);

    SystemBlock motor(vector<double>{1, 1},
                      vector<double>{-1, 1},
                      0.5
                      );//simple integrator

    double out;
    double target=100;
    double error=0;

    for(double i=0;i<0.01/dts;i+=dts)
    {


        //update inputs
        error = target - motor.GetState();

        //control diagram
        0.05*error  >  motor;

        //update outputs
        //c1.OutputUpdate(1);

        //update graphs
        pt.pushBack(motor.GetState());

        cout << i << ", " << motor.GetState() << endl;
        sleep(dts);

    }

    pt.Plot();


    return 0;
}
